## Pi
[mcu]
serial: /tmp/klipper_host_mcu

## SKR PICO V1
[mcu z]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571289471E8-if00 
restart_method: command



[mcu stridemax_dual]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6612C771F72B92B-if00 
restart_method: command
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------


[mcu scanner] 
serial: /dev/serial/by-id/usb-Cartographer_614e_310007000E43304146393320-if00
restart_method: command
# CARTOGRAPHER 3D

##Stock nozzle board
[mcu nozzle_mcu]
#serial: /dev/ttyS1
serial: /dev/serial/by-path/platform-xhci-hcd.1-usb-0:2.1:1.0-port0
baud: 230400
restart_method: command

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0  

[pause_resume]
[include shell_command.cfg]
[include mainsail.cfg]
[include sensorless.cfg]








#####################################################################
#   Z Stepper Settings  SKR PICO
#####################################################################
# X on pico
##  Z0 Stepper - Front Left
[stepper_z]
step_pin: z:gpio11
dir_pin: !z:gpio10
enable_pin: !z:gpio12
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8    
microsteps: 32
endstop_pin: probe:z_virtual_endstop # uses cartographer as virtual endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 250
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 0
gear_ratio: 20:16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 0
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

# Y on pico
##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: z:gpio6
dir_pin: !z:gpio5
enable_pin: !z:gpio7
rotation_distance: 8
microsteps: 32
#endstop_pin: ^Z:gpio3
gear_ratio: 20:16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
#diag_pin: ^z:gpio3

# Z on pico
##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: z:gpio19
dir_pin: !z:gpio28
enable_pin: !z:gpio2
rotation_distance: 8
microsteps: 32
#endstop_pin: probe:z_virtual_endstop
gear_ratio: 20:16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:gpio9
tx_pin: z:gpio8
uart_address: 1
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


[z_tilt]
z_positions:
    -50, 0              # stepper_z location (front left)
    100, 232            # stepper_z1 location (rear center)
    250, 0              # stepper_z2 location (front right)
points:
    10, 30             # front left
    113.5, 223            # rear center
    220, 30             # front right
speed: 200
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075

[temperature_sensor Pico_mcu]
sensor_type: temperature_mcu
sensor_mcu: z
min_temp: 0
max_temp: 100

[filament_switch_sensor runout_sensor]
switch_pin: !z:gpio16
pause_on_runout: True

[heater_bed]
heater_pin: z:gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: z:gpio26
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[duplicate_pin_override]
pins: z:gpio27, z:gpio18

[temperature_sensor chamber_temp]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: z:gpio27
min_temp: 0
max_temp: 125

[fan_generic exhaust_fan]
pin: z:gpio18
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.100
cycle_time: 0.010
hardware_pwm: False


[temperature_fan exhaust_fan]
pin: z:gpio18
cycle_time: 0.0100
hardware_pwm: false
max_power: 1
shutdown_speed: 0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: z:gpio27
min_temp: 0
max_temp: 70
control: watermark
max_delta: 2
target_temp: 45
max_speed: 1.0
min_speed: 0.0

[fan_generic Side_Fan]
pin: z:gpio17
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.100
cycle_time: 0.010
hardware_pwm: False


######################################################################
## Nozzle_mcu CREALITY STOCK NOZZLE BOARD
######################################################################
[extruder]
max_extrude_only_distance: 1000.0
max_extrude_cross_section: 80
step_pin: nozzle_mcu:PB1
dir_pin: nozzle_mcu:PB0
enable_pin: !nozzle_mcu:PB2
microsteps: 16
rotation_distance: 6.9
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: nozzle_mcu:PB7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: nozzle_mcu:PA0
pressure_advance: 0.03
pressure_advance_smooth_time: 0.040
control: pid
pid_Kp: 25.013
pid_Ki: 2.566
pid_Kd: 60.966
min_temp: -100
max_temp: 320

[tmc2209 extruder]
uart_pin: nozzle_mcu:PB11
tx_pin: nozzle_mcu:PB10

uart_address: 3
run_current: 0.55
sense_resistor: 0.150
stealthchop_threshold: 0
# driver_IHOLDDELAY: 8
# driver_TPOWERDOWN: 20
# driver_TBL: 2
# driver_TOFF: 3
# driver_HEND: 0
# driver_HSTRT: 5


[heater_fan hotend_fan]
pin: nozzle_mcu:PB5
tachometer_pin: ^nozzle_mcu:PB4
heater: extruder
heater_temp: 40


[static_digital_output my_fan_output_pins]
pins: nozzle_mcu: PB6

[fan_generic Part_Fan] 
pin: !nozzle_mcu: PB8
tachometer_pin: ^nozzle_mcu: PB3
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.300
cycle_time: 0.010
hardware_pwm: False




#####################################################################
#      X/Y Stepper Settings STRIDEMAX dual
#####################################################################

[stepper_x]
##    Connected to MOT1
step_pin: stridemax_dual:gpio13
dir_pin: !stridemax_dual:gpio23
enable_pin: !stridemax_dual:gpio22
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_x:virtual_endstop # Spider X-MIN=PB14 or StrideMax Dual IO.0=gpio16
position_endstop: 226.5
position_max: 226.5
position_min: -2.5
homing_speed: 35
homing_positive_dir: true

##  Make sure to update below for your relevant driver (5160)
[tmc5160 stepper_x]
spi_bus: spi0_gpio4_gpio3_gpio2
cs_pin: stridemax_dual: gpio21
diag0_pin: ^!stridemax_dual: gpio14    # optional, to be honest, I don't know yet what this can be used for
driver_SGT: 0  # -64 is most sensitive value, 63 is least sensitive

# that's tmc5160 specific
sense_resistor: 0.05

# depends on motor and requirements
interpolate: true
run_current: 2


[stepper_y]
##    Connected to MOT0
step_pin: stridemax_dual:gpio6
dir_pin: !stridemax_dual:gpio5
enable_pin: !stridemax_dual:gpio20
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_y:virtual_endstop # Spider Y-MIN=PB13 or StrideMax Dual IO.1=gpio17
position_endstop: -0.5
position_max: 224
position_min: -0.5
homing_speed: 35
homing_positive_dir: false

##  Make sure to update below for your relevant driver (5160)
[tmc5160 stepper_y]
spi_bus: spi0_gpio4_gpio3_gpio2
cs_pin: stridemax_dual: gpio1
diag0_pin: ^!stridemax_dual: gpio7    # optional
driver_SGT: 1  # -64 is most sensitive value, 63 is least sensitive

# that's tmc5160 specific
sense_resistor: 0.05

# depends on motor and requirements
interpolate: true
run_current: 2


# You will need to configure a neopixel (or other addressable led, such as dotstar). See
# https://www.klipper3d.org/Config_Reference.html#neopixel for configuration details.
# And you can get sb led MACRO here: https://github.com/PrinterConfigs/DoomConfig/blob/master/stealthburner.cfg
# Or here https://github.com/sttts/voron-klipper-config/blob/master/stealthburner_leds.cfg
[neopixel leds]
pin: stridemax_dual:gpio19
chain_count: 3
color_order: GRBW
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5
initial_WHITE: 0.5

[fan_generic fan0]
pin: !stridemax_dual:gpio0
max_power:1.0
shutdown_speed:0
cycle_time:0.001
#hardware_pwm:true
kick_start_time:0.2
off_below:0.0
tachometer_pin: stridemax_dual:gpio15
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

[fan_generic fan1]
pin: stridemax_dual:gpio18
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
tachometer_pin: stridemax_dual:gpio25
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

[temperature_sensor right_kraken]
sensor_type: ATC Semitec 104GT-2
sensor_pin: stridemax_dual:gpio26   #T0
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

[temperature_sensor left_kraken]
sensor_type: ATC Semitec 104GT-2
sensor_pin: stridemax_dual:gpio27   #T1
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

[temperature_sensor TMC5160_1]
sensor_type: Generic 3950
sensor_pin: stridemax_dual:gpio28   #T2
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

[adc_temperature Voltage_Monitor]
temperature1: 24
voltage1: 1.160
temperature2: 48
voltage2: 2.329
temperature3: 60
voltage3: 2.916
#...
#   A set of temperatures (in Celsius) and voltages (in Volts) to use
#   as reference when converting a temperature. A heater section using
#   this sensor may also specify adc_voltage and voltage_offset
#   parameters to define the ADC voltage (see "Common temperature
#   amplifiers" section for details). At least two measurements must
#   be provided.
# temperature1:
# resistance1:
# temperature2:
# resistance2:
#...
#   Alternatively one may specify a set of temperatures (in Celsius)
#   and resistance (in Ohms) to use as reference when converting a
#   temperature. A heater section using this sensor may also specify a
#   pullup_resistor parameter (see "extruder" section for details). At
#   least two measurements must be provided.

[temperature_sensor StrideMax_Voltage]
sensor_type: Voltage_Monitor
sensor_pin: stridemax_dual:gpio29   #MON_48V
adc_voltage: 3.3
voltage_offset: 0
#min_temp:
#max_temp:
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.




#############################################################################
## CARTOGRAPHER 3D
#############################################################################
[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: -22                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.00555
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 125, 125    
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 35, 6
#    start point of bed mesh [X, Y]
mesh_max: 220, 198
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[safe_z_home]
home_xy_position: 110, 110
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
z_hop: 10

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner]
#*# mode = touch
#*#
#*# [scanner model default]
#*# model_coef = 1.3767088798913467,
#*# 	  1.795794986027218,
#*# 	  0.736354784070475,
#*# 	  0.36086352768251784,
#*# 	  0.4020430647405254,
#*# 	  0.3736356849385537,
#*# 	  -0.1529996211358779,
#*# 	  -0.25065660412393653,
#*# 	  0.1884425372832214,
#*# 	  0.17280026423933478
#*# model_domain = 3.2213953827878783e-07,3.35143679191584e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 31.376889
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.0.0
