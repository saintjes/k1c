#DEFINED VARIABLES

[gcode_macro PRINTER_PARAM]
variable_z_safe_pause: 0.0
variable_z_safe_g28: 3.0
variable_max_x_position: 300.0
variable_max_y_position: 300.0
variable_max_z_position: 300.0
variable_fans: 3
variable_auto_g29: 0
variable_fan0_min: 25
variable_fan1_min: 50
variable_fan2_min: 180
variable_fan2_speed: 0
variable_hotend_temp: 0
variable_e_min_current: 0.27
gcode:

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos  : True 
variable_custom_park_x   : 285
variable_custom_park_y   : 275
variable_custom_park_dz   : 50.0
variable_park_at_cancel   : True 
gcode:

#GENERAL MACROS (START,END,CANCEL,LOAD,UNLOAD,PAUSE,RESUME) 
[gcode_macro QUICK_CLEAN_NOZZLE]
gcode:
    # Move nozzle to cleaning position
    m104 S160
    G1 X1 Y1 Z10 F3000  ; Move to cleaning position
    M400  ; Wait for moves to finish

    # Clean nozzle
    G1 Z0 F300  ; Lower nozzle to 0mm above the bed
    M106 P0 S1  ; Set nozzle fan to max
    G1 X75 Y1 F300  ; Wipe nozzle on the bed
    G1 Z20 F3000  ; Raise nozzle
        
[gcode_macro CLEAN_NOZZLE]

variable_start_x: 130
variable_start_y: 226
variable_start_z: 3.8
variable_wipe_dist: 40
variable_wipe_qty: 60
variable_wipe_spd: 250
variable_raise_distance: 15

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

 ## Reset max accel and velocity in case it's been overwritten
 SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}
 
 ## Move nozzle to start position
 G90
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500


 ## Heat up the nozzle, cool, and turn on fans while wiping
 M109 S180 # 180c
 M109 S0
 M106 S1
 M106 P2 S1

 
 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
    

[gcode_macro START_PRINT]
variable_bed_temp: 105
variable_extruder_temp: 245
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
    m104 S{150}                                                                     # start heating nozzle dont wait
    M140 S{BED_TEMP}                                                                # start heating bed to desired bed temps and wait
    G28
    BED_MESH_CLEAR                                                                  # clear current mesh
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant meshing
    SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=25   # drop accels to prevent hyper agressive meshing
    QUICK_CLEAN_NOZZLE
    G28
    M107 P0                                                                         # Set nozzle fan to off
    M140 S{BED_TEMP}                                                                # start heating bed to desired bed temps and wait
    CARTOGRAPHER_TOUCH # CALIBRATE=0
    BED_MESH_CALIBRATE                                                              # start bedmesh calibrate
    G4 P500                                                                         # wait required to prevent MCU overload / inconsistant mesh calculation
    SMART_PARK                                                                      # park the printhead near the print area
    SET_VELOCITY_LIMIT ACCEL=18000 ACCEL_TO_DECEL=10000 SQUARE_CORNER_VELOCITY=5    # up acceleration back to slightly below regular travel speeds
    M190 S{BED_TEMP}                                                                # wait for bed temperature before next step
    M109 S{EXTRUDER_TEMP}                                                           # wait for nozzle temperature before next step
    LINE_PURGE                                                                      # create purge line near the print area of the part
    {action_respond_info("3d model received. Printing initiated.")}                                        # happy printing~

[gcode_macro END_PRINT]
gcode:
  G91                                                                                 # set to reletive positioning
  G1 E-5 F300                                                                         # Retract 5mm of filament at 300mm/min
  G1 Z15                                                                               # move z down 15mm to avoid contacting nozzle
  G90                                                                                 # set to absolute positioning
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max *0.99 %}  # Calculate 99% position of X 
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max /2 %}     # calculate 50% of total Y
  G1 X{POSITION_X} Y{POSITION_Y} F6000                                                # move toolhead to the front of the K1 aux fan like stock
#  M220 S100                                                                           # set feedrate to 100
#  M204 S500                                                                           # set starting acceleration to 500
  TURN_OFF_HEATERS                                                                    # disable heaters
  M84                                                                                 # power off motors
    {action_respond_info("Print complete, cooling that nozzle 150c.")}                  # End Print Notification
  M106 P0 S1                                                                        # Set nozzle fan to max
  M106 P2 S1                                                                        # Set side fan to max
  M109 S150                                                                           # Cool nozzle to 150c to reduce oozing
  M107 P0                                                                             # turn toolhead fan off
  M107 P2                                                                             # turn sidefan off 
  SET_FAN_SPEED FAN=Bed_Fans SPEED=0.0
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Chamber_Fan TARGET=40
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Air_Purifier TARGET=40
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  M84                                                                                 # disable stepper motors
  M104 S0                                                                             # turn off hot end
  EXCLUDE_OBJECT_DEFINE RESET=1                                                       # reset bed mesh boundaries


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
  {% set allow_park = client.park_at_cancel | default(false) | lower == 'true' %}
  {% set retract = client.cancel_retract | default(5.0) | abs %}
  ##### define park position #####
  # restore idle_timeout time if needed
  {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
  {% endif %}
  _CLIENT_RETRACT LENGTH={retract}
  G91
  G1 Z15                                                                               # move z down 15mm to avoid contacting nozzle
  G90                                                                                 # set to absolute positioning
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max *0.99 %}  # Calculate 99% position of X 
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max /2 %}     # calculate 50% of total Y
  G1 X{POSITION_X} Y{POSITION_Y} F6000                                                # move toolhead to the front of the K1 aux fan like stock
  TURN_OFF_HEATERS
  M106 S0
  M106 P0 S1                                                                        # Set nozzle fan to max
  M106 P2 S1                                                                        # Set side fan to max
  M109 S150                                                                           # Cool nozzle to 150c to reduce oozing
  M107 P0                                                                             # turn toolhead fan off
  M107 P2                                                                             # turn sidefan off 
  SET_FAN_SPEED FAN=Bed_Fans SPEED=0.0
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Chamber_Fan TARGET=40
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Air_Purifier TARGET=40
  {client.user_cancel_macro | default("")}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  CANCEL_PRINT_BASE
  EXCLUDE_OBJECT_DEFINE RESET=1                                                       # reset bed mesh boundaries

[gcode_macro LOAD_FILAMENT]
description: Load filament into the hotend
gcode:
  {% set EXTRUDE_LENGTH = params.EXTRUDE_LENGTH|default(50)|float %}
  {% set EXTRUDE_SPEED = params.EXTRUDE_SPEED|default(5)|float %}
  {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(2)|float %}
  {% set TEMPERATURE = params.TEMPERATURE|default(220)|float %}
  M117 Heating up to load filament
  M104 S{TEMPERATURE}
  M109 S{TEMPERATURE}
  M117 Loading filament
  G92 E0
  G1 E{EXTRUDE_LENGTH} F{EXTRUDE_SPEED * 60}
  G1 E-{RETRACT_LENGTH} F{EXTRUDE_SPEED * 60}
  G4 P5000  # Wait 5 seconds
  M104 S0 # turn off extruder heater
  M117 Filament load complete
  {action_respond_info("Mmm, delicious!")}

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from the hotend
gcode:
  {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(100)|float %}
  {% set RETRACT_SPEED = params.RETRACT_SPEED|default(5)|float %}
  {% set FAST_RETRACT_LENGTH = params.FAST_RETRACT_LENGTH|default(20)|float %}
  {% set FAST_RETRACT_SPEED = params.FAST_RETRACT_SPEED|default(40)|float %}
  {% set TEMPERATURE = params.TEMPERATURE|default(220)|float %}
  M117 Heating up to unload filament
  M104 S{TEMPERATURE}
  M109 S{TEMPERATURE}
  M117 Unloading filament
  G92 E0
  G1 E-{RETRACT_LENGTH} F{RETRACT_SPEED * 60}
  G1 E-{FAST_RETRACT_LENGTH} F{FAST_RETRACT_SPEED * 60}
  M104 S{160}
  M117 Filament unload complete
  {action_respond_info("That filament sucked anyway.")}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

#ADDITIONAL MACROS (M106, M107, etc)

[gcode_macro M106]
description: Set Fan Speed. P0 for part, P2 for auxiliary, P3 chamber
gcode:
  {% set fan_map = {0: "Part_Fan", 2: "Side_Fan", 3: "Chamber_Fan"} %}
  {% set fan_id = params.P|default(0)|int %}
  {% set fan = fan_map[fan_id] %}
  {% set speed_param = params.S|default(255)|int %}
  {% if speed_param > 0 %}
    {% set speed = (speed_param|float / 255) %}
  {% else %}
    {% set speed = 0 %}
  {% endif %}
  SET_FAN_SPEED FAN={fan} SPEED={speed}

[gcode_macro M107]
description: Set Fan Off. P0 for part, P2 for auxiliary, P3 chamber
gcode:
  {% set fan_map = {0: "Part_Fan", 2: "Side_Fan", 3: "Chamber_Fan"} %}
  {% set fan_id = params.P|default(0)|int %}
  {% set fan = fan_map[fan_id] %}
  SET_FAN_SPEED FAN={fan} SPEED=0

[gcode_macro M109]
description: Wait for hot end temp before proceeding (does not wait to stabilize)
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M141]
description: Set Chamber temperature with slicers
gcode:
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={params.S|default(35)}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro SET_E_MIN_CURRENT]
gcode:
  {% set e_current = printer['gcode_macro PRINTER_PARAM'].e_min_current %}
  M400
  SET_TMC_CURRENT STEPPER=extruder CURRENT={e_current} HOLDCURRENT={e_current}
  G4 P2000

[gcode_macro RESTORE_E_CURRENT]
gcode:
  {% set e_current = printer.configfile.settings['tmc2209 extruder'].run_current %}
  M400
  SET_TMC_CURRENT STEPPER=extruder CURRENT={e_current} HOLDCURRENT={e_current}
  G4 P2000

[gcode_macro z_home_test]
gcode:
  {% set STEPS = params.STEPS|default(5)|int %}
  M400
  {% for step in range(STEPS) %}
    M400
    G91
    G1 Z+10 F1500
    G90
    G28 Z
  {% endfor %}

